{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,aAAY,KACNH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAbMQ,SAASC,cAAc,QAC/BC,iBAAiB,UA6BtB,SAAoBC,GAClBA,EAAIC,iBAEJ,MAAMZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,OAC9BC,EAAYC,OAAOjB,EAAMkB,OACzBC,EAAWF,OAAOJ,EAAKK,QAlB/B,SAAuBE,EAAOC,EAAOR,GACnC,IAAKS,EAAI,EAAGA,GAAKF,EAAOE,GAAK,EAAG,CAC9B,IAAIC,EAAOF,EAAQR,GAAQS,EAAI,GAC/BxB,EAAcwB,EAAGC,GACdC,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,UAE/D4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,WAajE8B,CAFqBb,OAAOH,EAAOI,OAEPF,EAAWG","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', submitForm);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction countPromises(count, delay, step) {\n  for (i = 1; i <= count; i += 1) {\n    let time = delay + step * (i - 1);\n    createPromise(i, time)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction submitForm(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.target;\n  const delayTime = Number(delay.value);\n  const stepTime = Number(step.value);\n  const amountNumber = Number(amount.value);\n\n  countPromises(amountNumber, delayTime, stepTime);\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","document","querySelector","addEventListener","evt","preventDefault","step","amount","target","delayTime","Number","value","stepTime","count","delay1","i","time","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$countPromises"],"version":3,"file":"03-promises.a22237db.js.map"}